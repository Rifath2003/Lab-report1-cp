//vector
#include <bits/stdc++.h>
int main()
{
    vector<int> f; //empty
    vector<int> s(4, 100);
    vector<int> t(s.begin(), s.end());
    vector<int> f(t);
    int m[] = {16, 2, 77, 9};
    vector<int> fi(m, m + sizeof(m) / sizeof(int));
    for (auto i = 0; i < fi.size(); i++)
        cout << fi[i];

    vector<int> v1[100];
    vector<int> v2(100);
    vector<int> v3[100][2];

    vector<vector<int>> V2D;
    for (int i = 0; i < 10; i++)
    {
        vector<int> temp;
        for (int j = 0; j <= i; j++)
        {
            temp.push_back(i);
        }
        v2D.push_back(temp);
    }
    for (auto outer = v2D.begin(); outer !v2D.end(); outer++)
    {
        for (inner = outer→begin(); inner != outer→end(); inner++)
        {
            cout << *inner;
        }
    }
    for (auto i = 0; i < v2D.size(); i++)
    {
        for (auto j = 0; j < v2D[i].size(); j++)
        {
            cout << v2D[i][j];
        }
    }
    vector<int>s;
    for(i=1;i<10;i++){
        s.push_back(i*100);
        cout<<s.back();
    }
    while(!s.empty()){
        
        cout<<s.size()<<s.back;
        s.pop_back();
        }
        cout<<"empty";
        vector<int>m;
        for(i=1;i<=10;i++){
            m.push_back(i);}
            m.erase(m.begin()+5);
            m.erase(m.begin(),m.begin()+5);
            for(i=0;i<m.size();i++)
            cout<<m[i];
            m.clear();
            cout<<m.size();
            m.resize(10);
            cout<<m.size();
            
            
            pair<int,char>P1;
            pair<string,double>P2("hjkgj",3.3);
            pair<string,double>P3;
            
             P1.first=10;P1.second='a';
             cout<<  P1.first<<" "<<P1.second;
             P3=make_pair("ajsowwow ekwkw",4.37);
             cout<<P3.first<<P3.second;
             
             bool cmp(pair<int,int>&a,pair<int,int>&b){
                 if(a.first==b.first)
                 return a.second<b.second;
                return a.first<a.second;
                
             }
             
             vector<pair<int,int>>v;
             int a[ ]={10,2,5,40};
             
             int a1[ ]={109,2,5,40};
             
             for(i=0;i<a.size();i++)
             
             v.push_back(make_pair(a[i],a1[i]));
             
             for(i=0;i<a.size();i++)
             
             cout<<v[i].first << v[i].second;
             
             
             
             
             set<int,greater<int>>s1;
             
             s1.insert(30);
             
             s1.insert(60);
             
             s1.insert(70);
             
             s1.insert(30);
             
             for(auto itr=s1.begin(); itr!=s1.end());
             itr++)
             
             cout<< *itr ;
             
             set<int>s2(s1.begin(),s1.end());
             
             s2.erase(s2.begin(),s2.find(30));
             
             for(auto itr= s2.begin( ); itr!= s2.end( );itr++)
             
             
             cout<< *itr ;
             
             s2.erase(70) ;
             
             cout << * s1. lower_bound(40);
             
             cout<< *s1.upper_bound(40);
             
             
             
             
             
             stack < int > s ;
             
             for (i=0;i<5;i++)
             
             s.  push(i) ;
             
             while (!s.empty())
             
             { cout << s.top( ) ;
                    s.pop( );
                    
             }
             
             s.push(100) ;
             
             s.top( )+=1000 ;
             
             cout << s.top ( ) ;
             
             s.pop ( ) ;
             
             if ( s.empty ( )) cout << " empty "  ;
             
             
             
             
             
             
             
             queue < int > Q ;
             
             for ( int i = 0 ; i<5;i++)
             
             Q.push (i*i)
             
             if(!Q.empty()) Q.pop;
             
             while(!Q.empty())Q.pop;
             
             if(Q.empty())cout << "empty";
             
             Q.push(77)
             
             Q.push(16)
             
             cout << Q.front( ) << Q.back( )
             
             ;
             
             Q.front()-= Q.back(); cout << Q.front( );
             
             Q.back( )+= Q.front( ); cout << Q.back( );
             
             
             
             a[ ] = {4,5,6}
             
             priority_queue <int> pq
             
             for(i=0;i<6;i++)
             
             pq.push(a[i])
             
             while(!pq.empty( ))
         {    cout << pq.top( );pq.pop( )   }
         
         
         
         
         
         
         
         map <string,int> m   ;
         
         m["one"] = 1
         
         map<int,int>m
         
         m.insert(pair<int,int>(1,40))
         
         m[7]=10
         
         for(itr= m.begin() ; itr!= m.end();itr++)
         
         cout<< itr->first << itr->second
         
         map<int,int>m1(m.begin( ),m.end( ))
         
         for(itr=m1.begin();itr!=m1.end();itr++)
         
         cout<<itr->first <<itr-> second
         
         cout << m1.lower_bound( 5 ) -> first
               
               << m1.lower_bound(5) -> second         
         
         
         
         
         
             
             
             
             
             
             
             
             
             
             
                                                                    
                                                              
             
             
             
            